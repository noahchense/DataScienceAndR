- Class: meta
  Course: DataScienceAndR
  Lesson: RBasic-Motivation
  Author: Wush Wu
  Type: Standard
  Organization: Taiwan R User Group
  Version: 0.1

- Class : text
  Output: 這是一個讓大家快速入門R 語言的swirl課程
    這份文件中的格式採用和Markdown相容的語法
    為了讓大家快速上手，這裡先說明一些常見的Markdown語法

- Class : text
  Output : 所有的程式碼，都會用``來包覆。例如：當swirl提示要各位輸入：`sessionInfo()`
    就代表各位同學要在console輸入：sessionInfo()

- Class : text
  Output : 所有的超連結，都會用<>來包覆。例如：<https://www.google.com>
    代表要請大家打開 https://www.google.com

- Class : text
  Output: 那我們就開始吧！

- Class : text
  Output: 首先，我想要讓大家先體驗一個簡單的資料視覺化範例。透過我
    在參加2015年臺北市政府黑客松的一個作品，我們可以迅速的抓取
    臺北市政府的資料，並且利用R 既有強大的功能，迅速驗證我們對資料的概念

- Class : cmd_question
  Output: R 本身的功能是受限制的，但是它具備有非常強大的套件庫！
    首先，我們先學著怎麼安裝套件。今天第一個要麻煩大家安裝的，是
    名叫devtools的套件庫。請大家輸入：`install.packages("devtools")`
    ps. 如果同學已經安裝過了，可以輸入`skip()`
  CorrectAnswer: check_then_install("devtools", "1.9.1")
  AnswerTests: test_package_version("devtools", "1.9.1")

- Class : text
  Output: 過了上一關之後，大家應該都已經安裝了devtools套件。
    在R 之中，我們就是大量的呼叫R 本身，或是其他套件提供的函數，來做各種事情。
    剛剛的`install.packages("devtools")`就是讓R 安裝一個名稱為devtools的套件。
    接下來，我們要利用devtools套件的功能，來安裝DataTaipei這個套件。

- Class : cmd_question
  Output: 請各位同學在console輸入：`library(devtools)`
  CorrectAnswer: library(devtools)
  AnswerTests:
    - test_search_path("devtools")

- Class : cmd_question
  Output: 接著，請輸入：`install_github("TaipeiRHacker/DataTaipei")`
    各位同學可以在這邊測試一下R的自動完成功能。如果我們輸入`install_`之後暫停一下（Rstudio的功能），
    或是連按tab兩下（傳統R gui的功能），就可以自動補完函數名稱，或是列出函數名稱符合`install_`開頭的函數。
    ps. 如果同學已經安裝過了，可以輸入`skip()`
  CorrectAnswer: check_then_install_github("DataTaipei", "0.1", "TaipeiRHacker/DataTaipei")
  AnswerTests: test_package_version("DataTaipei", "0.1")

- Class : Text
  Output: 
    然後我們要利用DataTaipei從<http://data.taipei>中：
    1. 搜尋Youbike的資料源；2. 下載Youbike的資料；3. 繪製到google map上

- Class : cmd_question
  Output: 使用套件的起手式，請輸入：`library(DataTaipei)`
  CorrectAnswer: library(DataTaipei)
  AnswerTests: test_search_path("DataTaipei")

- Class : cmd_question
  Output: 接著，請同學輸入：`rs <- dataSetMetadataSearch(q = "youbike")`來：
    1. 搜尋youbike的資料源；2. 將結果儲存到變數rs之中
  CorrectAnswer: rs <- dataSetMetadataSearch(q = "youbike")
  AnswerTests:
    - any_of_exprs(
      "rs <- dataSetMetadataSearch(q = \"youbike\")",
      "rs = dataSetMetadataSearch(q = \"youbike\")"
      )

- Class : cmd_question
  Output: 請同學輸入：`rid <- getResources(rs, 1)`來：取得youbike資料的資源id
  CorrectAnswer: rid <- getResources(rs, 1)
  AnswerTests:
    - any_of_exprs(
      "rid <- getResources(rs, 1)",
      "rid = getResources(rs, 1)"
      )


- Class : cmd_question
  Output: 最後請同學下指令：`df <- resourceAquire(rid$resourceId[1])`從資源id中取得youbike的站點資料
  CorrectAnswer: df <- resourceAquire(rid$resourceId[1])
  AnswerTests:
    - any_of_exprs(
      "df <- resourceAquire(rid$resourceId[1])",
      "df = resourceAquire(rid$resourceId[1])"
      )

- Class : cmd_question
  Output: 就讓我們先來看看df的內容，請同學輸入：`head(df)`
  CorrectAnswer: head(df)
  AnswerTests:
    - omnitest("head(df)")

- Class: text
  Output: 是不是很簡單呢？像類似這樣串接資料的套件在R有非常非常多，而且只要是夠多人使用的資料接口，
    很快就會有對應的R 套件誕生。這就是Open Source的威力阿！

- Class: cmd_question
  Output: 接下來，我們來嘗試把Youbike的站點畫到google map上面。
    由於使用網頁服務需要Google帳號密碼，所以我們這裡就不Demo了。
    有興趣的同學可以在入門R之後看看<http://andrei.lopatenko.com/rstat/fusion-tables.R>。
    我們這次要利用ggmap這個套件。所以先請同學輸入`install.packages("ggmap")`來安裝套件。
  CorrectAnswer: check_then_install("ggmap", "2.5.2")
  AnswerTests: test_package_version("ggmap", "2.5.2")

- Class: cmd_question
  Output: 請同學再度輸入使用套件的起手式：`library(ggmap)`
  CorrectAnswer: library(ggmap)
  AnswerTests: 
    - test_search_path("ggmap")

- Class: cmd_question
  Output: 在R 之中，所有繪圖的問題都是整理資料的問題，所以我們先利用以下的指令，把資料轉換成可繪製的狀況：
    `df2 <- data.frame(lng = as.numeric(df$lng), lat = as.numeric(df$lat), bemp = bemp)`
  CorrectAnswer: df2 = data.frame(lng = as.numeric(df$lng), lat = as.numeric(df$lat), bemp = df$bemp)
  AnswerTests:
    - any_of_exprs(
      "df2 <- data.frame(lng = as.numeric(df$lng), lat = as.numeric(df$lat), bemp = df$bemp)",
      "df2 = data.frame(lng = as.numeric(df$lng), lat = as.numeric(df$lat), bemp = df$bemp)"
      )

- Class: cmd_question
  Output: 接著，請利用以下指令設定地圖的繪製範圍：`bdy_location <- apply(df2[,c("lng", "lat")], MARGIN = 2, range)`
  CorrectAnswer: bdy_location <- apply(df2[,c("lng", "lat")], MARGIN = 2, range)
  AnswerTests:
    - any_of_exprs(
      "bdy_location <- apply(df2[,c(\"lng\", \"lat\")], MARGIN = 2, range)",
      "bdy_location = apply(df2[,c(\"lng\", \"lat\")], MARGIN = 2, range)"
      )

- Class: cmd_question
  Output: 最後，請同學利用以下指令建立繪圖物件：`g <- qmap(location = c(bdy_location[c(1, 3, 2, 4)]), zoom = 14,legend = "topleft")`
  CorrectAnswer: g <- qmap(location = c(bdy_location[c(1, 3, 2, 4)]), zoom = 14)
  AnswerTests:
    - any_of_exprs(
      "g <- qmap(location = c(bdy_location[c(1, 3, 2, 4)]), zoom = 14)",
      "g = qmap(location = c(bdy_location[c(1, 3, 2, 4)]), zoom = 14)"
      )

- Class: cmd_question
  Output: 利用建立的繪圖物件，我們很快就可以畫出各站點的空位數量：`g + geom_point(aes(x = lng, y = lat, size = bemp), colour = "blue",data = df2)`
  CorrectAnswer: g + geom_point(aes(x = lng, y = lat, size = bemp), colour = "red",data = df2)
  AnswerTests:
    - omnitest("g + geom_point(aes(x = lng, y = lat, size = bemp), colour = \"red\",data = df2)")

- Class: text
  Output: 到目前為止，我們展現了利用R快速整合各種資料源頭、優秀的整理資料功能、與傑出的繪圖功能。
    簡單幾行程式碼，我們就展現了一個利用資料做視覺化的原型。當然，只有這樣是不夠精彩的！
    優秀的資料科學家應當要利用這樣的資料來述說許多精彩的故事，並且挖掘出人們不知道的知識，這才能帶來資料的價值。

- Class: text
  Output: 很多時候，要挖掘知識，我們需要建立數據模型來描述資料。而R在這上面，是非常非常厲害的工具！

- Class: text
  Output: 現在，就讓我們來問：如果我們想在金華國中（經緯度：25.032, 121.533）設定一個Youbike站點，
    那根據目前收集的資料，它當下的Youbike空位數會是多少呢？

- Class: text
  Output: 有一種分析空間資料的統計方法，叫做Kriging，可以初步解決剛剛我們問的這個問題。
    而要用R來建立一個Kriging模型，只要找到正確的套件就可以了。

- Class: cmd_question
  Output: 首先請各位同學先安裝kriging套件。這裡就請同學嘗試用上面學到的指令，自己做一次看看。
  CorrectAnswer: check_then_install("kriging", "1.1")
  AnswerTests: test_package_version("kriging", "1.1")

- Class: cmd_question
  Output: 接著，請載入kriging套件
  CorrectAnswer: library(kriging)
  AnswerTests:
    - test_search_path("kriging")

- Class: cmd_question
  Output: 讓我們利用各站點的位置和空位數，建立一個Kriging模型，請同學輸入：
    `m <- kriging(df2$lng, df2$lat, df2$bemp)`
  CorrectAnswer: m <- kriging(df2$lng, df2$lat, df2$bemp)
  AnswerTests: omnitest("m <- kriging(df2$lng, df2$lat, df2$bemp)")

- Class: cmd_question
  Output: 接著我們從模型中的預測點，找出最接近金華國中（經緯度：25.032, 121.533）的位置。
    請同學輸入：`pred <- m$map[which.min((m$map$x - 121.533)^2 + (m$map$y - 25.032)^2),"pred"]`
  CorrectAnswer: pred <- m$map[which.min((m$map$x - 121.533)^2 + (m$map$y - 25.032)^2),"pred"]
  AnswerTests: omnitest("pred <- m$map[which.min((m$map$x - 121.533)^2 + (m$map$y - 25.032)^2),\"pred\"]")

- Class: cmd_question
  Output: 我們可以檢查一下，大安區所有Youbike站點站點的空位數，看看是不是和我們預測得很接近
    請同學輸入：`daan <- df$bemp[grep("Daan Dist.", df$sareaen)]`來取得大安區的所有Youbike站點空位數
  CorrectAnswer: daan <- df$bemp[grep("Daan Dist.", df$sareaen)]
  AnswerTests: omnitest('daan <- df$bemp[grep("Daan Dist.", df$sareaen)]')
  
- Class: cmd_question
  Output: 請同學輸入： `mean(pred > daan)` 來計算我們預測的Youbike站點空位數，
    在所有大安區中的Youbike站點空位數中的百分位數，大概是多少
  CorrectAnswer: mean(pred > daan)
  AnswerTests: omnitest('mean(pred > daan)')

- Class: text
  Output: 結果應該不會太離譜，因為Kriging其實就是依照空間關係的一種取平均的統計方法。
    這個入門介紹就到這裡結束了，只依賴數行程式碼，我們就做到了：抓資料、整理資料、畫圖、建立模型與預測。
    就是因為R 非常非常的擅長這類的工作，所以在數據科學興起的時代，R 才會如此的火熱。

- Class : text
  Output: 各位同學友沒有覺得R 很有趣也很有用呢？接下來再請各位回到投影片的課程之中。

